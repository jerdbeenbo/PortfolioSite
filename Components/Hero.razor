@inject IJSRuntime JS
@inject NavigationManager Navigation
@using System.Runtime.InteropServices

<canvas @ref="boidsCanvas" class="fixed top-0 left-0 w-full h-full pointer-events-none"></canvas>

<div class="relative z-10 min-h-screen flex items-center justify-center">
    <div class="flex items-center justify-center">

        <div class="text-center gap-12">
            <h1 class="text-6xl font-bold text-white mb-4 drop-shadow-lg gap-12">
                Jarred Jenkins
            </h1>
            <div>
                <p class="text-white/90 mb-8 drop-shadow w-lg text-md">
                    passion for systems programming and creative coding. I enjoy exploring low-level technologies like
                    Rust and WebAssembly, building everything from garbage collectors to physics simulations. My
                    projects range from educational implementations of core CS concepts to interactive visualisations
                    that make complex algorithms accessible. I love diving deep into how things work under the hood
                    while creating engaging user experiences.
                </p>
            </div>
            <button @onclick="NavWork"
                class="bg-white/10 backdrop-blur-sm border border-white/20 text-white px-8 py-3 rounded-lg hover:bg-red-900/20 transition-all cursor-pointer">
                View My Work
            </button>
            <p class="mt-12 text-white/50 italic text-xs">*boids simulation running from Rust -> WebAssembly, adapted from The Nature of Code (p5.js)</p>
        </div>

        <img src="img/techstack.png" class="w-1/12 h-1/12"/>

        <div class="hidden md:block ml-8">
            <canvas @ref="sandCanvas" id="sandCanvas" class="rounded-lg border-2 border-red-900"
                style="width: 300px; height: 500px;">
            </canvas>
            <p class="text-sm mt-2 text-center text-yellow-300">Click and drag to add sand</p>
            <p class="text-xs mt-2 flex justify-center text-center text-white w-2xs">Rust Based Cellular Automata simulation, compiled to WebAssembly. JavaScript / HTML canvas</p>
        </div>
    </div>
</div>

@code {
    private ElementReference boidsCanvas;
    private ElementReference sandCanvas;

    private ElementReference work;

    private bool IsWeb => JS is IJSInProcessRuntime;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && IsWeb)
        {
            await JS.InvokeVoidAsync("initBoids", boidsCanvas);
            await JS.InvokeVoidAsync("initSand", sandCanvas);
        }
    }

    private void NavWork()
    {
        Navigation.NavigateTo("/work");
    }
}